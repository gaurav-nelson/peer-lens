# Ambiguity Detection Configuration
# This file defines the types of ambiguity to detect and their patterns

# Global settings
enabled: true
confidence_threshold: 0.7

# Ambiguity type configurations
ambiguity_types:
  missing_actor:
    enabled: true
    severity: high
    confidence_threshold: 0.8
    description: "Sentences where the actor or subject is missing or unclear"
    examples:
      - "The server was configured." # Who configured it?
      - "Changes were made to the database." # Who made the changes?
  
  ambiguous_pronoun:
    enabled: true
    severity: medium
    confidence_threshold: 0.6
    description: "Pronouns that could refer to multiple entities"
    examples:
      - "The server connects to the database. It is slow." # Which is slow?
      - "The manager spoke to the developer. He was concerned." # Who was concerned?
  
  unclear_antecedent:
    enabled: true
    severity: medium
    confidence_threshold: 0.6
    description: "Pronouns with unclear antecedents (e.g., 'It' with multiple possible referents)"
    examples:
      - "The application sends a confirmation to the database. It is critical." # Which is critical?
      - "The system connects to the API. It handles requests." # Which handles requests?
  
  unclear_subject:
    enabled: true
    severity: medium
    confidence_threshold: 0.7
    description: "Sentences where the subject is ambiguous or unclear"
    examples:
      - "This causes issues." # What is 'this'?
      - "The process fails." # Which process?
  
  ambiguous_modifier:
    enabled: false
    severity: low
    confidence_threshold: 0.5
    description: "Modifiers that could apply to multiple elements"
    examples:
      - "The red car and truck" # Is the truck red?
      - "Fast database queries" # Which queries are fast?
  
  vague_quantifier:
    enabled: false
    severity: low
    confidence_threshold: 0.6
    description: "Vague quantities that lack specificity"
    examples:
      - "Many users reported issues." # How many is 'many'?
      - "Some features are broken." # Which features?
  
  unclear_temporal:
    enabled: false
    severity: medium
    confidence_threshold: 0.7
    description: "Temporal references that are ambiguous"
    examples:
      - "The system was updated recently." # When exactly?
      - "After the meeting, changes were made." # How long after?
  
  unsupported_claims:
    enabled: true
    severity: high
    confidence_threshold: 0.8
    description: "Claims made without evidence or support"
    examples:
      - "This is the best solution." # Based on what criteria?
      - "The system is secure." # What makes it secure?
  
  fabrication_risk:
    enabled: true
    severity: high
    confidence_threshold: 0.7
    description: "Content that might be fabricated or unverifiable"
    examples:
      - "Studies show that..." # Which studies?
      - "Experts recommend..." # Which experts?
  
  excessive_certainty:
    enabled: false
    severity: medium
    confidence_threshold: 0.6
    description: "Overly certain statements that should be qualified"
    examples:
      - "This will definitely work." # How can you be certain?
      - "Everyone agrees that..." # Really, everyone?

# Detection patterns for missing actors
missing_actor_patterns:
  passive_voice_indicators:
    - "be"
    - "is" 
    - "are"
    - "was"
    - "were"
    - "being"
    - "been"
    
  clear_actors:
    technical:
      - "system"
      - "application"
      - "program" 
      - "software"
      - "server"
      - "database"
      - "service"
      - "api"
      - "interface"
      - "module"
      - "component"
    human:
      - "user"
      - "administrator"
      - "developer"
      - "operator"
      - "manager"
      - "you"
      - "we"
      
  technical_contexts:
    - "configure"
    - "generate"
    - "create"
    - "install"
    - "setup"
    - "deploy"
    - "execute"
    - "run"
    - "start"
    - "stop"
    - "update"
    - "modify"
    - "delete"
    - "process"
    - "handle"
    - "manage"
    - "control"
    - "monitor"
    - "validate"

# Detection patterns for ambiguous pronouns  
ambiguous_pronoun_patterns:
  problematic_pronouns:
    - "it"
    - "this"
    - "that"
    - "they"
    - "them"
    - "these"
    - "those"
    
  safe_contexts:
    # Contexts where pronouns are usually clear
    - "immediately_follows_noun"
    - "single_possible_referent"
    - "within_same_clause"

# Resolution strategies by ambiguity type
resolution_strategies:
  missing_actor:
    - "identify_actor"
    - "restructure_sentence"
    
  ambiguous_pronoun:
    - "clarify_pronoun"
    - "specify_reference"
    
  unclear_subject:
    - "specify_reference"
    - "add_context"
    
  ambiguous_modifier:
    - "restructure_sentence"
    - "clarify_modification_target"
    
  vague_quantifier:
    - "quantify_precisely"
    - "add_context"
    
  unclear_temporal:
    - "specify_timing"
    - "add_temporal_context" 