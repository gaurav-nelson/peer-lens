# IBM Style Guide - Language and Grammar Rules
# ROBUST CONFIGURATION - Systematic approach with concrete examples for every rule
# Each rule follows the pattern: primary_command + instruction + transformations + fallback

rules:
  # GLOBAL PRIMARY COMMAND - applies to all language/grammar rules
  language_priority:
    primary_command: "CRITICAL: Return ONLY the corrected text with NO explanations. Apply language and grammar fixes systematically: 1) Use second person ('you') for instructions, third person for system descriptions. Remove 'we', 'our'. 2) Convert passive to active voice."

  abbreviations:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Apply IBM Style Guide abbreviation standards"
    transformations:
      - pattern: "Latin abbreviations → English equivalents"
        examples:
          - "e.g., configure the settings → for example, configure the settings"
          - "i.e., the main folder → that is, the main folder"
          - "etc. → and so on"
      - pattern: "Spell out unfamiliar abbreviations on first use"
        examples:
          - "API → application programming interface (API)"
          - "SSL → Secure Sockets Layer (SSL)"
    fallback: "Replace Latin abbreviations with English equivalents, spell out technical abbreviations on first use"

  adverbs_only:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Fix placement of 'only' to ensure clear meaning"
    transformations:
      - pattern: "Move 'only' closer to what it modifies"
        examples:
          - "You only need to restart → You need to restart only"
          - "Only users can access → Users can only access"
          - "This only works on → This works only on"
    fallback: "Place 'only' immediately before the word or phrase it modifies"

  anthropomorphism:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Remove human characteristics from systems and objects"
    transformations:
      - pattern: "System actions → user actions or neutral descriptions"
        examples:
          - "The system wants to verify → The system verifies"
          - "The application thinks → The application determines"
          - "The database remembers → The database stores"
          - "The software knows → The software contains"
      - pattern: "Focus on user actions when possible"
        examples:
          - "The system will help you → You can use the system to"
          - "The tool will guide you → Use the tool to"
    fallback: "Replace human-like verbs (wants, thinks, knows) with technical verbs (processes, determines, contains)"

  articles:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Apply correct article usage (a, an, the)"
    transformations:
      - pattern: "Consonant sounds → 'a'"
        examples:
          - "an user → a user"
          - "an URL → a URL"
          - "an one-time → a one-time"
      - pattern: "Vowel sounds → 'an'"
        examples:
          - "a API → an API"
          - "a hour → an hour"
          - "a honest → an honest"
    fallback: "Use 'a' before consonant sounds, 'an' before vowel sounds (based on pronunciation, not spelling)"

  capitalization:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Apply sentence-style capitalization consistently"
    transformations:
      - pattern: "Sentence-style → first word and proper nouns only"
        examples:
          - "Configure The Database Settings → Configure the database settings"
          - "User Interface Design → User interface design"
          - "API Documentation → API documentation"
    fallback: "Capitalize only first word and proper nouns (company names, product names, acronyms)"

  conjunctions:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Use conjunctions correctly based on meaning"
    transformations:
      - pattern: "'Since' → time only, not causation"
        examples:
          - "Since this improves performance → Because this improves performance"
          - "Since version 2.0 was released → Since version 2.0 was released (time - correct)"
      - pattern: "'While' → time only, not contrast"
        examples:
          - "While this is faster → Although this is faster"
          - "While the process runs → While the process runs (time - correct)"
    fallback: "Use 'because' for causation, 'although' for contrast, reserve 'since/while' for time"

  contractions:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Expand contractions for formal tone"
    transformations:
      - pattern: "Contractions → full forms"
        examples:
          - "don't configure → do not configure"
          - "won't start → will not start"
          - "can't access → cannot access"
          - "it's important → it is important"
    fallback: "Spell out all contractions in technical documentation"

  inclusive_language:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Replace outdated terms with inclusive alternatives"
    transformations:
      - pattern: "Outdated security terms → modern equivalents"
        examples:
          - "whitelist → allowlist"
          - "blacklist → blocklist"
          - "master/slave → primary/secondary"
      - pattern: "Outdated technical terms → neutral equivalents"
        examples:
          - "guys → team members"
          - "man-hours → work hours"
          - "manning the server → staffing the server"
    fallback: "Use neutral, professional terminology that doesn't exclude or alienate any groups"

  plurals:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Fix pluralization errors and constructions"
    transformations:
      - pattern: "Remove (s) constructions"
        examples:
          - "the file(s) → the files"
          - "user(s) can access → users can access"
          - "setting(s) page → settings page"
      - pattern: "Correct irregular plurals"
        examples:
          - "datas → data"
          - "informations → information"
    fallback: "Use proper plural forms, avoid parenthetical (s) constructions"

  possessives:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Fix possessive constructions, especially with abbreviations"
    transformations:
      - pattern: "Abbreviation possessives → prepositional phrases"
        examples:
          - "the API's properties → the properties of the API"
          - "SSL's configuration → the configuration of SSL"
          - "the CPU's performance → the performance of the CPU"
      - pattern: "Complex possessives → prepositional phrases"
        examples:
          - "the system's administrator's guide → the administrator guide for the system"
    fallback: "Avoid possessives with abbreviations; use prepositional phrases instead"

  prepositions:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Simplify sentences with excessive prepositions"
    transformations:
      - pattern: "Multiple prepositions → simpler structure"
        examples:
          - "in order to configure the settings of the system → to configure system settings"
          - "for the purpose of monitoring the performance of the application → to monitor application performance"
      - pattern: "Wordy prepositional phrases → concise alternatives"
        examples:
          - "due to the fact that → because"
          - "in spite of the fact that → although"
    fallback: "Limit prepositions, use direct language, combine related concepts"

  pronouns:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Use correct pronouns - second person for instructions, avoid first person"
    transformations:
      - pattern: "First person → second person for instructions"
        examples:
          - "We recommend that you configure → Configure"
          - "Our system allows you to → You can"
          - "We provide the option → You have the option"
      - pattern: "Unclear pronouns → specific nouns"
        examples:
          - "The server connects to it → The server connects to the database"
          - "This configures it → This configures the system"
    fallback: "Use 'you' for user actions, specific nouns instead of unclear pronouns"

  spelling:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Apply US English spelling consistently"
    transformations:
      - pattern: "British → US spelling"
        examples:
          - "centre → center"
          - "colour → color"
          - "realise → realize"
          - "optimise → optimize"
          - "analyse → analyze"
    fallback: "Use US English spelling for all terms (center, color, realize, optimize, analyze)"

  terminology:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Use preferred IBM Style Guide terminology"
    transformations:
      - pattern: "Outdated terms → preferred terms"
        examples:
          - "de-install → uninstall"
          - "login (verb) → log in"
          - "setup (verb) → set up"
          - "backup (verb) → back up"
      - pattern: "IBM-specific terms → current terms"
        examples:
          - "IBM Knowledge Center → IBM Documentation"
          - "leverage → use"
          - "utilize → use"
    fallback: "Use current, preferred terminology as specified in IBM Style Guide"

  verbs:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Use present tense and active voice consistently"
    transformations:
      - pattern: "Passive voice → active voice"
        examples:
          - "The file is processed by the system → The system processes the file"
          - "Settings can be configured by users → Users can configure settings"
          - "The database is updated automatically → The system updates the database automatically"
      - pattern: "Future tense → present tense for procedures"
        examples:
          - "You will click the button → Click the button"
          - "The system will display → The system displays"
    fallback: "Convert passive sentences to active voice, use present tense for instructions"

  sentence_length:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Break long sentences into shorter, clearer ones"
    transformations:
      - pattern: "Long compound sentences → separate sentences"
        examples:
          - "Configure the settings and then restart the system and verify the changes → Configure the settings. Restart the system. Verify the changes."
          - "The system processes data and stores results and sends notifications → The system processes data, stores results, and sends notifications."
    fallback: "Keep sentences to 15-20 words each, break at logical points"

  conciseness:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Remove wordy phrases and redundancies"
    transformations:
      - pattern: "Wordy phrases → concise alternatives"
        examples:
          - "in order to → to"
          - "due to the fact that → because"
          - "at this point in time → now"
          - "make a decision → decide"
          - "perform an analysis → analyze"
    fallback: "Replace wordy phrases with single words when possible"

  clarity:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Replace complex words with simpler alternatives"
    transformations:
      - pattern: "Complex words → simple alternatives"
        examples:
          - "utilize → use"
          - "facilitate → help"
          - "demonstrate → show"
          - "implement → do"
          - "commence → start"
          - "terminate → end"
    fallback: "Choose the simplest word that conveys the meaning accurately"

  # AMBIGUITY DETECTION RULES
  ambiguity:
    primary_command: "CRITICAL: This text contains ambiguous content that requires clarification. You MUST resolve all ambiguities by identifying missing actors, clarifying unclear references, and making all meaning explicit."
    instruction: "Resolve ambiguity systematically"
    transformations:
      - pattern: "Unclear references → specific nouns"
        examples:
          - "This configures it → This setting configures the database"
          - "They can access → Users can access"
      - pattern: "Missing actors → specified actors"
        examples:
          - "Is processed automatically → The system processes automatically"
          - "Can be configured → You can configure"
    fallback: "Make all references explicit, specify all actors, clarify all pronouns"

  missing_actor:
    primary_command: "CRITICAL: This sentence uses passive voice without specifying who or what performs the action. You MUST identify and specify the actor performing the action."
    instruction: "Add the missing actor to passive voice sentences"
    transformations:
      - pattern: "Passive without actor → active with actor"
        examples:
          - "This is configured automatically → The system configures this automatically"
          - "Data is processed → The application processes data"
          - "Settings are saved → The system saves settings"
    fallback: "Identify who/what performs the action: the system, you, the administrator, the application"

  ambiguous_pronoun:
    primary_command: "CRITICAL: This sentence contains a pronoun with an unclear referent. Replace the ambiguous pronoun with the specific noun it refers to."
    instruction: "Replace unclear pronouns with specific nouns"
    transformations:
      - pattern: "Ambiguous pronouns → specific nouns"
        examples:
          - "The server connects to the gateway. It is fast → The server connects to the gateway. The connection is fast"
          - "Configure the database and restart it → Configure the database and restart the system"
    fallback: "Replace 'it', 'this', 'that', 'they' with the specific noun being referenced"

  # FABRICATION PREVENTION RULES
  unsupported_claims:
    primary_command: "CRITICAL: This text contains unsupported claims or promises. You MUST NOT strengthen claims beyond what can be substantiated."
    instruction: "Moderate overly strong claims"
    transformations:
      - pattern: "Absolute claims → measured language"
        examples:
          - "guarantees perfect security → provides enhanced security"
          - "never fails → rarely fails"
          - "always works → typically works"
          - "completely eliminates → significantly reduces"
    fallback: "Use qualifying language: typically, helps ensure, is designed to, may improve"

  fabrication_risk:
    primary_command: "CRITICAL: This text has high risk of information fabrication. You MUST NOT add any information not present in the original text."
    instruction: "Preserve original information level"
    transformations:
      - pattern: "Keep vague if original is vague"
        examples:
          - "WRONG: 'configures settings' → 'configures database connection settings for optimal performance'"
          - "CORRECT: 'configures settings' → 'configures settings'"
    fallback: "Do not add details, purposes, or explanations not in the original text"

  excessive_certainty:
    primary_command: "CRITICAL: Output ONLY the corrected text. NO introductions, NO explanations."
    instruction: "Replace overly confident language with measured alternatives"
    transformations:
      - pattern: "Excessive certainty → appropriate confidence"
        examples:
          - "definitely will → should"
          - "absolutely certain → confident"
          - "impossible to fail → unlikely to fail"
    fallback: "Use appropriate confidence levels based on the actual certainty of the claim"
